apiVersion: apps/v1
kind: Deployment
metadata:
  name: computesdk-api
  namespace: computesdk-system
  labels:
    app: computesdk-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: computesdk-api
  template:
    metadata:
      labels:
        app: computesdk-api
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.28
          command: 
            - 'sh'
            - '-c'
            - |
              echo "Waiting for PostgreSQL to be ready..."
              until nc -z computesdk-postgres.computesdk-system 5432; do 
                echo "PostgreSQL not ready, waiting..."
                sleep 3
              done
              echo "PostgreSQL port is open, waiting for user setup..."
              sleep 10
              echo "PostgreSQL should be ready now"
      containers:
        - name: computesdk-api
          image: computesdk/api:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            # PostgreSQL Configuration
            - name: DATABASE_TYPE
              value: "postgres"
            - name: POSTGRES_HOST
              value: "computesdk-postgres.computesdk-system"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: "api-service"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: api-service.computesdk-postgres.credentials.postgresql.acid.zalan.do
                  key: password
            - name: POSTGRES_DATABASE
              value: "computesdk"
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 45
            periodSeconds: 20
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          # Graceful shutdown for load balancers
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 5"]
      # Graceful shutdown timing
      terminationGracePeriodSeconds: 30